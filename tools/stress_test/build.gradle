plugins {
    // Apply the application plugin to add support for building a CLI application in Java.
    id 'java'
    id 'application'
    id 'checkstyle'
    id 'com.github.johnrengelman.shadow' version '7.1.2'
}

sourceCompatibility = JavaVersion.VERSION_1_8
targetCompatibility = JavaVersion.VERSION_1_8
[compileJava, compileTestJava]*.options*.encoding = 'UTF-8'

repositories {
    mavenLocal()
    mavenCentral()
    maven { url 'https://repo.spring.io/plugins-release' }
    maven { url 'https://jitpack.io' }
}

tasks.named('jar') {
    enabled = false
    dependsOn shadowJar
}

shadowJar {
    archiveBaseName.set('stresstest')
    archiveClassifier.set('')
    archiveVersion.set('')
    mergeServiceFiles()
}

dependencies {
    // Use JUnit test framework.
    testImplementation 'junit:junit:4.13.2'

    implementation "com.google.guava:guava:33.0.0-jre"
    implementation "io.grpc:grpc-netty-shaded:1.60.0"
    implementation "io.grpc:grpc-netty:1.60.0"
    implementation "io.grpc:grpc-okhttp:1.60.0"
    implementation "io.grpc:grpc-protobuf:1.60.0"
    implementation "io.grpc:grpc-stub:1.60.0"
    implementation "com.google.protobuf:protobuf-java-util:3.25.5"
    implementation "org.bouncycastle:bcprov-jdk18on:1.78.1"
//    implementation "io.vertx:vertx-core:4.5.10"
    implementation "io.netty:netty-all:4.1.100.Final"
    implementation("io.github.317787106:trident:0.9.2.4")
    implementation group: 'com.typesafe', name: 'config', version: '1.3.2'
//    implementation group: 'org.slf4j', name: 'slf4j-api', version: '1.7.25'
//    implementation group: 'org.slf4j', name: 'jcl-over-slf4j', version: '1.7.25'
    implementation 'ch.qos.logback:logback-classic:1.2.6'
//    implementation 'ch.qos.logback:logback-core:1.2.6'

    implementation group: 'info.picocli', name: 'picocli', version: '4.6.3'
    compileOnly 'org.projectlombok:lombok:1.18.12'
    annotationProcessor 'org.projectlombok:lombok:1.18.12'
    testCompileOnly 'org.projectlombok:lombok:1.18.12'
    testAnnotationProcessor 'org.projectlombok:lombok:1.18.12'
}

application {
    // Define the main class for the application.
    mainClass = 'org.tron.StressTest'
}

jar {
    manifest {
        attributes(
                'Main-Class': 'org.tron.StressTest'
        )
    }
}

checkstyle {
    toolVersion = '8.41'
    configFile = file("../../conf/checkstyle/checkStyle.xml")
}

task checkstylekStressMain(type: Checkstyle) {
    source 'src/main/java'
    include '**/*.java'
    exclude '**/generated/**'
    classpath = files()
    ignoreFailures = false
}

task checkstyleStressTest(type: Checkstyle) {
    source 'src/test/java'
    include '**/*.java'
    exclude '**/generated/**'
    classpath = files()
    ignoreFailures = false
}

check.dependsOn checkstylekStressMain, checkstyleStressTest
