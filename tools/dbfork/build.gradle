plugins {
    // Apply the application plugin to add support for building a CLI application in Java.
    id 'java'
    id 'application'
    id 'checkstyle'
    id 'com.github.johnrengelman.shadow' version '7.1.2'
}

sourceCompatibility = JavaVersion.VERSION_1_8
targetCompatibility = JavaVersion.VERSION_1_8
[compileJava, compileTestJava]*.options*.encoding = 'UTF-8'

repositories {
    mavenLocal()
    mavenCentral()
    maven { url 'https://repo.spring.io/plugins-release' }
    maven { url 'https://jitpack.io' }
}

tasks.named('jar') {
    enabled = false
    dependsOn shadowJar
}

shadowJar {
    archiveBaseName.set('dbfork')
    archiveClassifier.set('')
    archiveVersion.set('')
    mergeServiceFiles()
}

dependencies {
    // Use JUnit test framework.
    testImplementation 'junit:junit:4.13.2'

    implementation('com.github.tronprotocol.java-tron:chainbase:GreatVoyage-v4.7.7') {
        exclude group: 'com.fasterxml.jackson', module: 'jackson-bom'
        exclude group: "pull-parser", module: "pull-parser" // https://www.jianshu.com/p/ef6936448aa6
    }
    implementation platform('com.fasterxml.jackson:jackson-bom:2.14.0')
    implementation group: 'info.picocli', name: 'picocli', version: '4.6.3'

    compileOnly 'org.projectlombok:lombok:1.18.12'
    annotationProcessor 'org.projectlombok:lombok:1.18.12'
    testCompileOnly 'org.projectlombok:lombok:1.18.12'
    testAnnotationProcessor 'org.projectlombok:lombok:1.18.12'
}

application {
    // Define the main class for the application.
    mainClass = 'org.tron.DBFork'
}

jar {
    manifest {
        attributes(
                'Main-Class': 'org.tron.DBFork'
        )
    }
}

checkstyle {
    toolVersion = '8.41'
    configFile = rootProject.file('tools/config/checkstyle/checkStyle.xml')
}

task checkstyleDBForkMain(type: Checkstyle) {
    source 'src/main/java'
    include '**/*.java'
    exclude '**/generated/**'
    classpath = files()
    ignoreFailures = false
}

task checkstyleDBForkTest(type: Checkstyle) {
    source 'src/test/java'
    include '**/*.java'
    exclude '**/generated/**'
    classpath = files()
    ignoreFailures = false
}

check.dependsOn checkstyleDBForkMain, checkstyleDBForkTest


